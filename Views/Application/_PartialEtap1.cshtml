@model IPOTEKA.UA.Models.Application
<link href="~/Content/FormElements.css" rel="stylesheet" />
<link href="~/Content/test.css" rel="stylesheet" />
@using (Html.BeginForm("Index", "Application", new { step = @ViewBag.Step }, FormMethod.Post, new { @class = "form-style-8 unselect" }))
{
    <div>
        <div>
            @Html.DropDownListFor(model => model.ProductType, new SelectList(ViewBag.dicProducts, "Name", "Name"), "Тип продукту"@*, new { @class = "unselected" }*@)
            <div>
                @Html.ValidationMessageFor(model => model.ProductType)
            </div>
        </div>

        <div>
            @Html.TextBoxFor(model => Model.CreditSum, new { placeholder = @Html.DisplayNameFor(m => m.CreditSum), @type = "number", @min = 100000, @max = 1000000 })
            <div>
                @Html.ValidationMessageFor(model => Model.CreditSum)
            </div>
        </div>

        <div>
            @Html.TextBoxFor(model => Model.Termin, new { placeholder = @Html.DisplayNameFor(m => m.Termin), @type = "number", @min = 12, @max = 120 })
            <div>
                @Html.ValidationMessageFor(model => Model.Termin)
            </div>
        </div>

        <div>
            @Html.DropDownListFor(model => model.Schema, new SelectList(ViewBag.dicSchems, "Value", "Value"), "Схема погашення"@*, new { @class = "unselected" }*@)
            <div>
                @Html.ValidationMessageFor(model => model.Schema)
            </div>
        </div>

        <div>
            @Html.TextBoxFor(model => model.City, new { placeholder = @Html.DisplayNameFor(m => m.City) })
            <div>
                @Html.ValidationMessageFor(model => model.City)
            </div>
        </div>
    </div>

    <div style="text-align:right;">
        <input type="submit" value="Продовжити" class="green" />
    </div>
}

<script>

    if (ProductType.value == "") {
        if (ProductType.className != "input-validation-error") {
            ProductType.className = "unselect";
        }
        else {
            ProductType.className = "input-validation-error";
        }
    }

    if (Schema.value == "") {
        if (Schema.className != "input-validation-error") {
            Schema.className = "unselect";
        }
        else {
            Schema.className = "input-validation-error";
        }
    }

    $(document).ready(function () {
        $('select').on('change', function () { //attach event handler to select's change event.
            //use a more specific selector

            $(this).toggleClass('unselect', $(this).val() === "");

            //if ($(this).val() === "") { //checking to see which option has been picked

            //    $(this).addClass('unselected');
            //} else {                   // add or remove class accordingly
            //    $(this).removeClass('unselected');
            //}

        });
    });
</script>